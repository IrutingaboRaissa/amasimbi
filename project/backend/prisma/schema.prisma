// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String    @id @default(cuid())
  email          String    @unique
  password       String
  displayName    String
  age           Int
  category      String
  parent_consent Boolean   @default(false)
  avatar        String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  posts         Post[]
  comments      Comment[]
  activities    Activity[]
}

model Post {
  id          String    @id @default(cuid())
  title       String
  content     String
  isAnonymous Boolean   @default(false)
  anonymousId String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  comments    Comment[]
}

model Comment {
  id          String    @id @default(cuid())
  content     String
  isAnonymous Boolean   @default(false)
  anonymousId String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  author      User      @relation(fields: [authorId], references: [id], onDelete: Cascade)
  authorId    String
  post        Post      @relation(fields: [postId], references: [id], onDelete: Cascade)
  postId      String
}

model Activity {
  id        String   @id @default(uuid())
  type      String   // e.g., "login", "profile_update", "post_created"
  details   String?
  userId    String
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
}